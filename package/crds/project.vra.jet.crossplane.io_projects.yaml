---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: projects.project.vra.jet.crossplane.io
spec:
  group: project.vra.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vrajet
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Project is the Schema for the Projects API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProjectSpec defines the desired state of Project
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  administratorRoles:
                    description: List of administrator roles associated with the project.
                      Only administrators can manage project's configuration.
                    items:
                      properties:
                        email:
                          description: The email of the user or name of the group.
                          type: string
                        type:
                          description: Type of the principal. Currently supported
                            ‘user’ (default) and 'group’.
                          type: string
                      required:
                      - email
                      type: object
                    type: array
                  administrators:
                    description: List of administrator users associated with the project.
                      Only administrators can manage project's configuration.
                    items:
                      type: string
                    type: array
                  constraints:
                    description: List of storage, network and extensibility constraints
                      to be applied when provisioning through this project.
                    items:
                      properties:
                        extensibility:
                          description: Constraints that are used to drive placement
                            policies for entities such as image, network, storage,
                            etc. Constraint expressions are matched against tags on
                            existing placement targets.
                          items:
                            properties:
                              expression:
                                description: An expression of the form "[!]tag-key[:[tag-value]]",
                                  used to indicate a constraint match on keys and
                                  values of tags.
                                type: string
                              mandatory:
                                description: Indicates whether this constraint should
                                  be strictly enforced or not.
                                type: boolean
                            required:
                            - expression
                            - mandatory
                            type: object
                          type: array
                        network:
                          description: Constraints that are used to drive placement
                            policies for entities such as image, network, storage,
                            etc. Constraint expressions are matched against tags on
                            existing placement targets.
                          items:
                            properties:
                              expression:
                                description: An expression of the form "[!]tag-key[:[tag-value]]",
                                  used to indicate a constraint match on keys and
                                  values of tags.
                                type: string
                              mandatory:
                                description: Indicates whether this constraint should
                                  be strictly enforced or not.
                                type: boolean
                            required:
                            - expression
                            - mandatory
                            type: object
                          type: array
                        storage:
                          description: Constraints that are used to drive placement
                            policies for entities such as image, network, storage,
                            etc. Constraint expressions are matched against tags on
                            existing placement targets.
                          items:
                            properties:
                              expression:
                                description: An expression of the form "[!]tag-key[:[tag-value]]",
                                  used to indicate a constraint match on keys and
                                  values of tags.
                                type: string
                              mandatory:
                                description: Indicates whether this constraint should
                                  be strictly enforced or not.
                                type: boolean
                            required:
                            - expression
                            - mandatory
                            type: object
                          type: array
                      type: object
                    type: array
                  customProperties:
                    additionalProperties:
                      type: string
                    description: The project custom properties which are added to
                      all requests in this project
                    type: object
                  description:
                    description: A human-friendly description.
                    type: string
                  machineNamingTemplate:
                    description: The naming template to be used for resources provisioned
                      in this project.
                    type: string
                  memberRoles:
                    description: List of member roles associated with the project.
                    items:
                      properties:
                        email:
                          description: The email of the user or name of the group.
                          type: string
                        type:
                          description: Type of the principal. Currently supported
                            ‘user’ (default) and 'group’.
                          type: string
                      required:
                      - email
                      type: object
                    type: array
                  members:
                    description: List of member users associated with the project.
                    items:
                      type: string
                    type: array
                  name:
                    description: A human-friendly name used as an identifier in APIs
                      that support this option.
                    type: string
                  operationTimeout:
                    description: The timeout that should be used for Blueprint operations
                      and Provisioning tasks. The timeout is in seconds.
                    type: number
                  placementPolicy:
                    description: The placement policy that will be applied when selecting
                      a cloud zone for provisioning.
                    type: string
                  sharedResources:
                    description: Specifies whether the resources in this projects
                      are shared or not. If not set default will be used.
                    type: boolean
                  viewerRoles:
                    description: List of viewer roles associated with the project.
                    items:
                      properties:
                        email:
                          description: The email of the user or name of the group.
                          type: string
                        type:
                          description: Type of the principal. Currently supported
                            ‘user’ (default) and 'group’.
                          type: string
                      required:
                      - email
                      type: object
                    type: array
                  viewers:
                    description: List of viewer users associated with the project.
                    items:
                      type: string
                    type: array
                  zoneAssignments:
                    description: List of configurations for zone assignment to a project.
                    items:
                      properties:
                        cpuLimit:
                          description: The maximum amount of cpus that can be used
                            by this cloud zone. Default is 0 (unlimited cpu).
                          type: number
                        maxInstances:
                          description: The maximum number of instances that can be
                            provisioned in this cloud zone. Default is 0 (unlimited
                            instances)
                          type: number
                        memoryLimitMb:
                          description: The maximum amount of memory that can be used
                            by this cloud zone. Default is 0 (unlimited memory).
                          type: number
                        priority:
                          description: The priority of this zone in the current project.
                            Lower numbers mean higher priority. Default is 0 (highest)
                          type: number
                        storageLimitGb:
                          description: Upper limit on storage that can be requested
                            from a cloud zone which is part of this project. Default
                            is 0 (unlimited storage). Supported only for vSphere cloud
                            zones.
                          type: number
                        zoneId:
                          description: The Cloud Zone Id
                          type: string
                      required:
                      - zoneId
                      type: object
                    type: array
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ProjectStatus defines the observed state of Project.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
